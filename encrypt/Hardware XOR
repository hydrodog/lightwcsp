module XOR(
    input clk,
    input[127:0] datad,
    input[127:0] subkey,
    output reg[127:0] datae,
	 input[127:0] datah,
	 output reg[127:0] datai,
	 input[127:0] subkey1,
	 input[127:0] count,
	 output reg[127:0] encry_output,
	 output reg[127:0] decry_output
    );
 
initial begin
datae=128'dz;
datai=128'dz;
end
 
always@(posedge clk) begin
if(count==4 || count==9 || count==14 || count==19 || count==24 || count==29 || count==34 || count==39 || count==44 || count==49)
datae=datad^subkey;
if(count==3 || count==8 || count==13 || count==18 || count==23 || count==28 || count==33 || count==38 || count==43 || count==48)
datai=datah^subkey1;
if(count==49)
begin
encry_output=datae;
decry_output=datai;
end
end
 
endmodule
